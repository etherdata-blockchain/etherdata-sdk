"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[934],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=a,y=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,c(c({ref:t},u),{},{components:n})):r.createElement(y,c({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=p;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},4372:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),c=["components"],i={title:"Signing and Sending Transaction"},l=void 0,s={unversionedId:"python/tutorial/sign",id:"python/tutorial/sign",title:"Signing and Sending Transaction",description:"In this tutorial, we will talk about how to use Etherdata-SDK to sign and send the transaction.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/python/tutorial/sign.md",sourceDirName:"python/tutorial",slug:"/python/tutorial/sign",permalink:"/en/docs/python/tutorial/sign",editUrl:"https://github.com/etherdata-blockchain/etherdata-sdk/tree/main/docs/docs/python/tutorial/sign.md",tags:[],version:"current",frontMatter:{title:"Signing and Sending Transaction"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/en/docs/python/intro"},next:{title:"create",permalink:"/en/docs/python/api/etherdata_sdk/account/create"}},u=[{value:"Create an Account object",id:"create-an-account-object",children:[],level:2},{value:"Initialize Account object to get Private Key and Address",id:"initialize-account-object-to-get-private-key-and-address",children:[],level:2},{value:"Create a transaction object",id:"create-a-transaction-object",children:[{value:"Create a sender and receiver account",id:"create-a-sender-and-receiver-account",children:[],level:4},{value:"Create a transaction object",id:"create-a-transaction-object-1",children:[],level:4},{value:"Signed by sender",id:"signed-by-sender",children:[],level:4}],level:2},{value:"Send transaction by json rpc method",id:"send-transaction-by-json-rpc-method",children:[],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"In this tutorial, we will talk about how to use Etherdata-SDK to sign and send the transaction."),(0,o.kt)("h2",{id:"create-an-account-object"},"Create an Account object"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from etherdata_sdk.account import Account, Transaction\n\naccount = Account()\n")),(0,o.kt)("h2",{id:"initialize-account-object-to-get-private-key-and-address"},"Initialize Account object to get Private Key and Address"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"More ",(0,o.kt)("a",{parentName:"p",href:"/docs/python/api/etherdata_sdk/account/create"},"info"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'# From mnemonic\naccount.create_private_key_from_mnemonic(mnemonic)\n\n# From random private key generation\naccount.create_random_private_key()\n\n# From local private key file\naccount.read_private_key_from_file("abc.key")\n')),(0,o.kt)("h2",{id:"create-a-transaction-object"},"Create a transaction object"),(0,o.kt)("p",null,"We will talk about how to create a transaction object as well as sender and receiver account in the following section."),(0,o.kt)("h4",{id:"create-a-sender-and-receiver-account"},"Create a sender and receiver account"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from_account = Account().create_random_private_key()\nto_account = Account().create_random_private_key()\n")),(0,o.kt)("h4",{id:"create-a-transaction-object-1"},"Create a transaction object"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"transaction = Transaction(to=to_account.address, value=30000, gas=1000, gas_price=300, nonce=1)\n")),(0,o.kt)("h4",{id:"signed-by-sender"},"Signed by sender"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"signed = from_account.sign_transaction(transaction)\n")),(0,o.kt)("h2",{id:"send-transaction-by-json-rpc-method"},"Send transaction by json rpc method"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'from etherdata_sdk.json_rpc import JsonRpcMethods\n\nclient = JsonRpcMethods("https://rpc.etdchain.net")\nclient.sendRawTransaction(signed.raw_transaction)\n')))}p.isMDXComponent=!0}}]);