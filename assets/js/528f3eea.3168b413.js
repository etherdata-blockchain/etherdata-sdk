"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[210],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var s=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,s,r=function(e,t){if(null==e)return{};var n,s,r={},a=Object.keys(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(s=0;s<a.length;s++)n=a[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=s.createContext({}),p=function(e){var t=s.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return s.createElement(i.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},d=s.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,g=d["".concat(i,".").concat(h)]||d[h]||u[h]||a;return n?s.createElement(g,l(l({ref:t},c),{},{components:n})):s.createElement(g,l({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=d;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return s.createElement.apply(null,l)}return s.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2368:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return c},default:function(){return d}});var s=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],o={sidebar_label:"clique",title:"etherdata_sdk.json_rpc.clique"},i=void 0,p={unversionedId:"python/api/etherdata_sdk/json_rpc/clique",id:"python/api/etherdata_sdk/json_rpc/clique",title:"etherdata_sdk.json_rpc.clique",description:"GetSnapshotResponseRecents Objects",source:"@site/docs/python/api/etherdata_sdk/json_rpc/clique.md",sourceDirName:"python/api/etherdata_sdk/json_rpc",slug:"/python/api/etherdata_sdk/json_rpc/clique",permalink:"/docs/python/api/etherdata_sdk/json_rpc/clique",editUrl:"https://github.com/etherdata-blockchain/etherdata-sdk/docs/docs/python/api/etherdata_sdk/json_rpc/clique.md",tags:[],version:"current",frontMatter:{sidebar_label:"clique",title:"etherdata_sdk.json_rpc.clique"},sidebar:"tutorialSidebar",previous:{title:"admin",permalink:"/docs/python/api/etherdata_sdk/json_rpc/admin"},next:{title:"debug",permalink:"/docs/python/api/etherdata_sdk/json_rpc/debug"}},c=[{value:"GetSnapshotResponseRecents Objects",id:"getsnapshotresponserecents-objects",children:[{value:"number",id:"number",children:[],level:4}],level:2},{value:"GetSnapshotResponseSigners Objects",id:"getsnapshotresponsesigners-objects",children:[{value:"signer",id:"signer",children:[],level:4}],level:2},{value:"GetSnapshotResponseSnapshot Objects",id:"getsnapshotresponsesnapshot-objects",children:[{value:"hash",id:"hash",children:[],level:4},{value:"number",id:"number-1",children:[],level:4},{value:"recents",id:"recents",children:[],level:4},{value:"signers",id:"signers",children:[],level:4}],level:2},{value:"StatusResponseSealerActivity Objects",id:"statusresponsesealeractivity-objects",children:[{value:"signerAddresses",id:"signeraddresses",children:[],level:4},{value:"numBlocksSigned",id:"numblockssigned",children:[],level:4}],level:2},{value:"StatusResponse Objects",id:"statusresponse-objects",children:[{value:"inturnPercent",id:"inturnpercent",children:[],level:4},{value:"sealerActivity",id:"sealeractivity",children:[],level:4},{value:"numBlocks",id:"numblocks",children:[],level:4}],level:2},{value:"Clique Objects",id:"clique-objects",children:[{value:"get_snapshot",id:"get_snapshot",children:[],level:4},{value:"Arguments",id:"arguments",children:[],level:4},{value:"Returns GetSnapshotResponseSnapshot",id:"returns-getsnapshotresponsesnapshot",children:[],level:4},{value:"get_snapshot_at_hash",id:"get_snapshot_at_hash",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"get_signers",id:"get_signers",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"proposals",id:"proposals",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"propose",id:"propose",children:[],level:4},{value:"discard",id:"discard",children:[],level:4},{value:"status",id:"status",children:[],level:4},{value:"Returns StatusResponse",id:"returns-statusresponse",children:[],level:4}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,s.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"getsnapshotresponserecents-objects"},"GetSnapshotResponseRecents Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass\nclass GetSnapshotResponseRecents()\n")),(0,a.kt)("h4",{id:"number"},"number"),(0,a.kt)("p",null,"The addresses of prevoious blocks"),(0,a.kt)("h2",{id:"getsnapshotresponsesigners-objects"},"GetSnapshotResponseSigners Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass\nclass GetSnapshotResponseSigners()\n")),(0,a.kt)("h4",{id:"signer"},"signer"),(0,a.kt)("p",null,"The signer"),(0,a.kt)("h2",{id:"getsnapshotresponsesnapshot-objects"},"GetSnapshotResponseSnapshot Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass\nclass GetSnapshotResponseSnapshot()\n")),(0,a.kt)("h4",{id:"hash"},"hash"),(0,a.kt)("p",null,"The hash of the block"),(0,a.kt)("h4",{id:"number-1"},"number"),(0,a.kt)("p",null,"The number of the block"),(0,a.kt)("h4",{id:"recents"},"recents"),(0,a.kt)("p",null,"The details of previous blocks"),(0,a.kt)("h4",{id:"signers"},"signers"),(0,a.kt)("p",null,"An object containing an arrry of signers"),(0,a.kt)("h2",{id:"statusresponsesealeractivity-objects"},"StatusResponseSealerActivity Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass\nclass StatusResponseSealerActivity()\n")),(0,a.kt)("h4",{id:"signeraddresses"},"signerAddresses"),(0,a.kt)("p",null,"The signer addresses"),(0,a.kt)("h4",{id:"numblockssigned"},"numBlocksSigned"),(0,a.kt)("p",null,"The number of blocks signed by signers"),(0,a.kt)("h2",{id:"statusresponse-objects"},"StatusResponse Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass_json\n\n@dataclass\nclass StatusResponse()\n")),(0,a.kt)("h4",{id:"inturnpercent"},"inturnPercent"),(0,a.kt)("p",null,"Percentage of blocks signed in-turn"),(0,a.kt)("h4",{id:"sealeractivity"},"sealerActivity"),(0,a.kt)("p",null,"A object containing signer addresses and the number of blocks signed by them"),(0,a.kt)("h4",{id:"numblocks"},"numBlocks"),(0,a.kt)("p",null,"The number of blocks analyzed"),(0,a.kt)("h2",{id:"clique-objects"},"Clique Objects"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"class Clique()\n")),(0,a.kt)("p",null,"The clique API provides access to the state of the clique consensus engine\nYou can use this API to manage signer votes and to check the health of a private network"),(0,a.kt)("h4",{id:"get_snapshot"},"get","_","snapshot"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def get_snapshot(number: float) -> GetSnapshotResponseSnapshot\n")),(0,a.kt)("p",null,"Retrieves a snapshot of all clique state at a given block"),(0,a.kt)("h4",{id:"arguments"},"Arguments"),(0,a.kt)("p",null,"number: The number of the block"),(0,a.kt)("h4",{id:"returns-getsnapshotresponsesnapshot"},"Returns ",(0,a.kt)("a",{parentName:"h4",href:"#getsnapshotresponsesnapshot-objects"},(0,a.kt)("inlineCode",{parentName:"a"},"GetSnapshotResponseSnapshot"))),(0,a.kt)("p",null,"snapshot: Snapshot of all clique state at the given block"),(0,a.kt)("h4",{id:"get_snapshot_at_hash"},"get","_","snapshot","_","at","_","hash"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def get_snapshot_at_hash() -> Any\n")),(0,a.kt)("p",null,"Retrieves the state snapshot at a given block"),(0,a.kt)("h4",{id:"returns"},"Returns"),(0,a.kt)("p",null,"ststeSnapshot: The tate snapshot at the block."),(0,a.kt)("h4",{id:"get_signers"},"get","_","signers"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def get_signers() -> List[str]\n")),(0,a.kt)("p",null,"Retrieves the list of authorized signers at the specified block"),(0,a.kt)("h4",{id:"returns-1"},"Returns"),(0,a.kt)("p",null,"signerArray: The list of authorized signers"),(0,a.kt)("h4",{id:"proposals"},"proposals"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def proposals() -> str\n")),(0,a.kt)("p",null,"Returns the current proposals the node is voting on"),(0,a.kt)("h4",{id:"returns-2"},"Returns"),(0,a.kt)("p",null,"proposal: The current proposals"),(0,a.kt)("h4",{id:"propose"},"propose"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def propose() -> None\n")),(0,a.kt)("p",null,"Adds a new authorization proposal that the signer will attempt to push through\nIf the auth parameter is true, the local signer votes for the given address to be included in the set of authorized signers\nWith auth set to false, the vote is against the address"),(0,a.kt)("h4",{id:"discard"},"discard"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def discard() -> None\n")),(0,a.kt)("p",null,"This method drops a currently running proposal\nThe signer will not cast further votes (either for or against) the address"),(0,a.kt)("h4",{id:"status"},"status"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"def status() -> StatusResponse\n")),(0,a.kt)("p",null,"This is a debugging method which returns statistics about signer activity for the last 64 blocks"),(0,a.kt)("h4",{id:"returns-statusresponse"},"Returns ",(0,a.kt)("a",{parentName:"h4",href:"#statusresponse-objects"},(0,a.kt)("inlineCode",{parentName:"a"},"StatusResponse"))),(0,a.kt)("p",null,"inturnPercent: Percentage of blocks signed in-turn\nsealerActivity: A object containing signer addresses and the number of blocks signed by them\nnumBlocks: The number of blocks analyzed"))}d.isMDXComponent=!0}}]);